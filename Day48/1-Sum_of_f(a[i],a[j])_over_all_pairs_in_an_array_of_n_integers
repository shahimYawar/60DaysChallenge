Given an array A of n integers, find the sum of f(a[i], a[j]) of all pairs (i, j) such that (1 <= i < j <= n).

f(a[i], a[j]):       if abs(a[j]-a[i]) > 1

                         f(a[i], a[j]) = a[j] - a[i]

                         else  if abs(a[j]-a[i]) <= 1

                         f(a[i], a[j]) = 0 

Example 1:

Input : arr[ ] = {6, 6, 4, 4}
Output : -8
Explanation:
All pairs are: 
(6 - 6) + (4 - 6) + (4 - 6) + (4 - 6) + (4 - 6) + (4 - 4) = -8
return -8.


// Code :


//{ Driver Code Starts
//Initial Template for Java

//Initial Template for Java

/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;


class Array {
    
    // Driver code
	public static void main (String[] args) throws IOException{
		// Taking input using buffered reader
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int testcases = Integer.parseInt(br.readLine());
		
		// looping through all testcases
		while(testcases-- > 0){
		    String line = br.readLine();
		    String[] element = line.trim().split("\\s+");
		    int sizeOfArray = Integer.parseInt(element[0]);
		     
		    int arr [] = new int[sizeOfArray];
		    
		    line = br.readLine();
		    String[] elements = line.trim().split("\\s+");
		    for(int i = 0;i<sizeOfArray;i++){
		        arr[i] = Integer.parseInt(elements[i]);
		    }
		    Complete obj = new Complete();
		    int ans = obj.sum(arr, sizeOfArray);
		    System.out.println(ans);
		}
	}
}




// } Driver Code Ends


//User function Template for Java

class Complete{
    
   
    // Function for finding maximum and value pair
    public static int sum (int arr[], int n) {
        //Complete the function
       int ans=0,psum=0;
       HashMap<Integer,Integer> hm=new HashMap<>();
       for(int i=0;i<n;i++){
           ans+=i*arr[i]-psum;
           ans+=hm.getOrDefault(arr[i]+1,0);
           ans-=hm.getOrDefault(arr[i]-1,0);
           hm.put(arr[i],hm.getOrDefault(arr[i],0)+1);
           psum+=arr[i];
       }
       return ans;
    }
    
}
