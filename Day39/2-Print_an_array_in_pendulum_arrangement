Given an array arr of size n. Arrange the elements of the array in a way similar to the to-and-fro movement of a Pendulum.

The minimum element out of the list of integers, must come in center position of array. If there are even elements, then minimum element should be moved to (n-1)/2 index (considering that indexes start from 0)
The next number (next to minimum) in the ascending order, goes to the right, the next to next number goes to the left of minimum number and it continues like a Pendulum.
As higher numbers are reached, one goes to one side in a to-and-fro manner similar to that of a Pendulum
Example 1:
Input : 
n = 5
arr[] = {1, 3, 2, 5, 4}
Output :
5 3 1 2 4
Explanation: 
The minimum element is 1, so it is moved to the middle. The next higher element 2  is moved to the right of the middle element while the next higher element 3 is moved to the left of the middle element and this process is continued.

//Code :

//{ Driver Code Starts
// Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int t =
            Integer.parseInt(br.readLine().trim()); // Inputting the testcases
        while (t-- > 0) {
            int n = Integer.parseInt(br.readLine().trim());
            int arr[] = new int[n];
            String inputLine[] = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(inputLine[i]);
            }

            Compute obj = new Compute();
            int answer[] = obj.pendulumArrangement(arr, n);
            int sz = answer.length;

            StringBuilder output = new StringBuilder();
            for (int i = 0; i < sz; i++) output.append(answer[i] + " ");
            System.out.println(output);
        }
    }
}

// } Driver Code Ends


// User function Template for Java

class Compute {
    public int[] pendulumArrangement(int arr[], int n) {
        // Write your code here
        Arrays.sort(arr);
        int[] a=new int[n];
        int mid=(n-1)/2;
        a[mid]=arr[0];
        int j=1;
        int l=mid-1;
        int r=mid+1;
        while(j<n){
            if(r<n){
                a[r]=arr[j];
                r++;
                j++;
            }
            if(l>=0){
                a[l]=arr[j];
                l--;
                j++;
            }
        }
        return a;
    }
}
