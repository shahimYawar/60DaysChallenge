Given two arrays a[] and b[] of same size.Your task is to find minimum sum of two elements such that they belong to different arrays and are not at same index in their arrays.


Example 1:

Input : 
a[] = {5, 4, 13, 2, 1}
b[] = {2, 3, 4, 6, 5}
Output : 
3
Explanation :
We take 1 from a[] and 2 from b[] Sum is 1 + 2 = 3.

// Code :


//{ Driver Code Starts
//Initial Template for Java

//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main(String[] args) throws IOException
	{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());
        while(t-->0)
        {
            int n = Integer.parseInt(br.readLine().trim());
            int a[] = new int[(int)(n)];
            int b[] = new int[(int)(n)];
            
            
            String inputLine[] = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                a[i] = Integer.parseInt(inputLine[i]);
            }
            String inputLine1[] = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                b[i] = Integer.parseInt(inputLine1[i]);
            }
            
            
            Solution obj = new Solution();
            System.out.println(obj.minSum(a, b, n));
        }
	}
}

// } Driver Code Ends


//User function Template for Java



class Solution {

    public int minSum(int a[], int b[], int n) {
        int aMin1=Integer.MAX_VALUE;
        int aMin2=aMin1;
       int aIndx1=0;
       int aIndx2=0;
       
       int bMin1=aMin1;
       int bMin2=aMin1;
       int bIndx1=0;
       int bIndx2=0;
       
       for(int i=0; i<n; i++){
           if(aMin1>a[i]){ aMin2=aMin1; aMin1=a[i]; aIndx2=aIndx1; aIndx1=i; }   
           else if(aMin2>a[i]){ aMin2=a[i]; aIndx2=i; }
           
           if(bMin1>b[i]){ bMin2=bMin1; bMin1=b[i]; bIndx2=bIndx1; bIndx1=i; }    
           else if(bMin2>b[i]){ bMin2=b[i]; bIndx2=i; }
       }
       
       if(aIndx1 != bIndx1){ return aMin1+bMin1; }
       return Math.min(aMin1+bMin2,aMin2+bMin1); 
    }
}
