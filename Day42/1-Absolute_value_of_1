Given an array arr of size n. Print all the numbers less than k and should be such that the difference between every adjacent digit should be 1 in the array.

Note: Return empty list if no such number present, driver code will automatically print -1.

Example 1:

Input:
n = 8, k = 54
arr[] = {7, 98, 56, 43, 45, 23, 12, 8}
Output: 43 45 23 12
Explanation: 43 45 23 12 all these numbers have adjacent digits diff as 1 and they areless than 54.


//Code :

//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int tc = Integer.parseInt(br.readLine().trim());
        while (tc-- > 0) {
            String[] inputLine;
            inputLine = br.readLine().trim().split(" ");
            int n = Integer.parseInt(inputLine[0]);
            long k = Long.parseLong(inputLine[1]);
            long[] arr = new long[n];
            inputLine = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                arr[i] = Long.parseLong(inputLine[i]);
            }

            long[] ans = new Solution().getDigitDiff1AndLessK(arr, n, k);
            for (long ele : ans) {
                System.out.print(ele + " ");
            }
            if (ans.length == 0) {
                System.out.print(-1);
            }
            System.out.println();
        }
    }
}

// } Driver Code Ends


//User function Template for Java


class Solution {
    long[] getDigitDiff1AndLessK(long[] arr, int n, long k) {
        // code here
        ArrayList<Long> al = new ArrayList<>();
        for(long x: arr){
            if(x<k){
                if(isDiffOne(x)){
                    al.add(x);
                }
            }
        }
        long []ans = new long[al.size()];
        int counter=0;
        for(long y: al){
            ans[counter++]=y;
        }
        return ans;
    }
    static boolean isDiffOne(long num){
        if(num/10==0){
            return false;
        }
        long fn = num%10;
        num=num/10;
        long sn=num%10;
        while(num > 0){
            if(Math.abs(fn-sn) != 1){
                return false;
            }
            fn=sn;
            num=num/10;
            sn=num%10;
        }
        return true;
    }
}
