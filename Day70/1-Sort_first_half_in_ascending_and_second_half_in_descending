Given an array arr of n integers, sort the first half of the array in ascending order and second half in descending order.

Example 1:

Input:
n = 4
arr[] = {10, 20, 30, 40}
Output: 10 20 40 30


// Code :


//{ Driver Code Starts
//Initial Template for Java


import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int tc = Integer.parseInt(br.readLine().trim());
        while (tc-- > 0) {
            String[] inputLine;
            inputLine = br.readLine().trim().split(" ");
            int n = Integer.parseInt(inputLine[0]);
            int[] arr = new int[n];
            inputLine = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(inputLine[i]);
            }

            new Solution().customSort(arr, n);
            for (int i = 0; i < n; i++) {
                System.out.print(arr[i] + " ");
            }
            System.out.println();
        }
    }
}


// } Driver Code Ends


//User function Template for Java


class Solution {
    void customSort(int[] arr, int n) {
        // code here
        Arrays.sort(arr,0,n/2);
        Arrays.sort(arr,n/2,n);
        int start =n/2;
        int end=n-1;
        while(start<=end){
            int temp=arr[start];
            arr[start]=arr[end];
            arr[end]=temp;
            start++;
            end--;
        }
    }
}
