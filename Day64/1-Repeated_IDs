Geek is given a task to select at most 10 employees for a company project. Each employee is represented by a single digit ID number which is unique for all the selected employees for the project. Geek has a technical problem in his system which printed ID number multiple times. You are given array a[ ] of N elements having all printed IDs. Help him to get rid of the repeated IDs.

Example 1:

Input:
N = 5
a[ ] = {8, 8, 6, 2, 1}
Output:
8 6 2 1


// Code :


//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main(String[] args) throws IOException
	{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim()); // Inputting the testcases
        while(t-->0)
        {
            long n = Long.parseLong(br.readLine().trim());
            long a[] = new long[(int)(n)];
            
            String inputLine[] = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                a[i] = Long.parseLong(inputLine[i]);
            }
            
            Compute obj = new Compute();
            int answer[] = obj.uniqueId(a, n);
            int sz = answer.length;
            
            for(int i=0;i<sz;i++)
            System.out.print(answer[i]+" ");
            System.out.println();
            
        }
	}
}

// } Driver Code Ends


//User function Template for Java

class Compute {
    
    public int[] uniqueId(long arr[], long n)
    {
        LinkedHashSet<Integer> hs=new LinkedHashSet<>();
        for(long num : arr){
            hs.add((int)num);
        }
        int[] ans=new int[hs.size()];
        int pos=0;
        Iterator<Integer> ite=hs.iterator();
        while(ite.hasNext()){
            ans[pos]=ite.next();
            pos++;
        }
        return ans;
    }
}
